{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"weapo",
				"weaponSprite"
			],
			[
				"remov",
				"removeChild(...)	openfl.display.DisplayObject"
			],
			[
				"rem",
				"removeWeapon(  )	Unknown<9>"
			],
			[
				"Get",
				"getSprite(  )	Unknown<2>"
			],
			[
				"M",
				"MOUSE_MOVE	String"
			],
			[
				"mouse",
				"MouseEvent	flash.events"
			],
			[
				"set",
				"setAsBox( hx : Float , hy : Float )	Void"
			],
			[
				"B2B",
				"B2BodyDef	box2D.dynamics"
			],
			[
				"get",
				"getFixtureList(...)	box2D.dynamics.B2Fixture"
			],
			[
				"turn",
				"myGameTurnControl	GameTurnControl"
			],
			[
				"_all",
				"_allPlayerOnScene	Array<Dynamic>"
			],
			[
				"Scne",
				"ScenePlayerActor	class"
			],
			[
				"stage",
				"stageHeight	Int"
			],
			[
				"tage",
				"stageWidth	Int"
			],
			[
				"stag",
				"stageWidth	Int"
			],
			[
				"rec",
				"scrollRect	openfl.geom.Rectangle"
			],
			[
				"_",
				"_turnTimer	flash.utils.Timer"
			],
			[
				"Timer",
				"Timer	flash.utils"
			],
			[
				"textF",
				"TextFieldType	flash.text"
			],
			[
				"Scene",
				"ScenePlayerActor	class"
			],
			[
				"max",
				"maxSceneHeight	Int"
			],
			[
				"sc",
				"scaleX	Float"
			],
			[
				"maxWid",
				"maxWidthPerPolygon	Float"
			],
			[
				"maxWi",
				"maxWidthPerPolygon	Float"
			],
			[
				"coord",
				"coordsArray	Array<Dynamic>"
			],
			[
				"cre",
				"createFixture"
			],
			[
				"polygon",
				"polygonArray"
			],
			[
				"wor",
				"worldScale"
			],
			[
				"right",
				"rightVertexY	var"
			],
			[
				"nextR",
				"nextRightVertexX"
			],
			[
				"left",
				"leftVertexX"
			],
			[
				"nextRigh",
				"nextRightVertexY	var"
			],
			[
				"next",
				"nextRightVertexX	var"
			],
			[
				"generate",
				"generatePolygons	function"
			],
			[
				"B2Fixture",
				"B2FixtureDef	box2D.dynamics"
			],
			[
				"update",
				"updateSprite(  )	Void"
			],
			[
				"worldS",
				"worldScale	Int"
			],
			[
				"_scne",
				"_scenesToStop	var"
			],
			[
				"_sce",
				"_scenesToStop"
			],
			[
				"_scenes",
				"_scenesToStop	var"
			],
			[
				"Display",
				"DisplayObject	flash.display"
			],
			[
				"L",
				"Lib	flash"
			],
			[
				"B2Body",
				"B2BodyDef	box2D.dynamics"
			],
			[
				"world",
				"worldScale	Int"
			],
			[
				"worl",
				"worldScale	Int"
			],
			[
				"_stage",
				"_stageHeight	Int"
			],
			[
				"Even",
				"EventDispatcher	flash.events"
			],
			[
				"remove",
				"removeEventListener(...)	Void"
			],
			[
				"Event",
				"Event	flash.events"
			],
			[
				"sha",
				"shapes"
			],
			[
				"se",
				"setAsBox( hx : Float , hy : Float )	Void"
			],
			[
				"B2sha",
				"B2PolygonShape	box2D.collision.shapes"
			],
			[
				"b2S",
				"B2Shape	box2D.collision.shapes"
			],
			[
				"Dis",
				"DisplayObjectContainer	flash.display"
			],
			[
				"new",
				"newPlayer"
			],
			[
				"linVel",
				"linVelocityY	Float"
			],
			[
				"world_s",
				"world_scale	Float"
			],
			[
				"world_",
				"world_scale	Float"
			],
			[
				"LAU",
				"LAUNCH_POINT"
			],
			[
				"Add",
				"addEventListener(...)	Void"
			],
			[
				"add",
				"addEventListener"
			],
			[
				"Player",
				"PlayerEvent"
			],
			[
				"_a",
				"_actorsToRemove"
			],
			[
				"in",
				"instance(...)	instance.S"
			],
			[
				"B2Contact",
				"B2Contact	box2D.dynamics.contacts"
			],
			[
				"s",
				"shape1	box2D.collision.shapes.B2Shape"
			],
			[
				"setC",
				"setContactListener(...)	Void"
			],
			[
				"B2Contac",
				"B2ContactListener	box2D.dynamics"
			],
			[
				"lef",
				"leftWall"
			],
			[
				"line",
				"lineTo( x : Float , y : Float )	Void"
			],
			[
				"B2Fixt",
				"B2FixtureDef	box2D.dynamics"
			],
			[
				"array",
				"arrayOfCoordinates"
			],
			[
				"B2Fix",
				"B2FixtureDef	box2D.dynamics"
			],
			[
				"b2Body",
				"B2BodyDef	box2D.dynamics"
			],
			[
				"Array",
				"Array<T>	class"
			],
			[
				"pegBounds",
				"pegBoundsX	Int"
			],
			[
				"u",
				"updateNow"
			],
			[
				"gp",
				"graphics	openfl.display.Graphics"
			],
			[
				"w",
				"world_sprite	flash.display.Sprite"
			],
			[
				"Pla",
				"PlayerActor	class"
			],
			[
				"event",
				"EventDispatcher	flash.events"
			],
			[
				"setL",
				"setLinearVelocity(...)	Void"
			],
			[
				"a",
				"addChild(...)	openfl.display.DisplayObject"
			],
			[
				"wo",
				"world"
			],
			[
				"Sp",
				"Sprite	flash.display"
			],
			[
				"Disp",
				"DisplayObject	flash.display"
			],
			[
				"P",
				"PHYSICS_SCALE"
			],
			[
				"B2",
				"B2World"
			],
			[
				"B2b",
				"B2BodyDef	box2D.dynamics"
			],
			[
				"Eve",
				"EventDispatcher	class"
			],
			[
				"body",
				"bodyDefinition	box2D.dynamics.B2BodyDef"
			],
			[
				"wall",
				"wallLeft	openfl.display.Sprite"
			],
			[
				"sta",
				"stageWidth"
			],
			[
				"draw",
				"drawRect(...)	Void"
			],
			[
				"b2",
				"b2_staticBody	Int"
			],
			[
				"ba",
				"ballShape"
			],
			[
				"ADDE",
				"ADDED_TO_STAGE	String"
			],
			[
				"Debug",
				"B2DebugDraw	box2D.dynamics"
			],
			[
				"debug",
				"debug_draw	box2D.dynamics.B2DebugDraw"
			],
			[
				"my",
				"my_circle	var"
			],
			[
				"stae",
				"stageHeight	Int"
			],
			[
				"Circle",
				"circleFixtureDef"
			],
			[
				"cir",
				"circleShape	box2D.collision.shapes.B2CircleShape"
			],
			[
				"f",
				"m_friction	Float"
			],
			[
				"de",
				"m_density	Float"
			],
			[
				"_whee",
				"_wheelFixture"
			],
			[
				"wh",
				"wheel	var"
			],
			[
				"ADD",
				"ADDED_TO_STAGE	String"
			],
			[
				"ev",
				"Event"
			],
			[
				"ge",
				"getMidpoint"
			],
			[
				"FlxC",
				"FlxColor"
			],
			[
				"FlxBu",
				"FlxButton	flixel.ui"
			],
			[
				"time",
				"timeToConsole"
			],
			[
				"loot",
				"lootObject"
			],
			[
				"onS",
				"onStackObject"
			],
			[
				"loo",
				"lootObject"
			],
			[
				"item",
				"itemInBag"
			],
			[
				"class",
				"className"
			],
			[
				"place",
				"place"
			],
			[
				"stop",
				"stopLoop"
			],
			[
				"upda",
				"updateUIfightingLog"
			],
			[
				"res",
				"respawnDelta"
			],
			[
				"clas",
				"className"
			],
			[
				"cons",
				"timeToConsole"
			],
			[
				"tim",
				"timeToConsole"
			],
			[
				"ali",
				"alive"
			],
			[
				"up",
				"updateUIfightingLog"
			],
			[
				"shoots",
				"Shoots"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "package;\n\nimport flash.display.Sprite;\nimport flash.events.Event;\nimport flash.display.Stage;\nimport flash.Lib;\nimport flash.events.EventDispatcher;\nimport flash.geom.Point;\nimport flash.geom.Rectangle;\n\nimport box2D.dynamics.B2World;\nimport box2D.common.math.B2Vec2;\nimport box2D.dynamics.B2DebugDraw;\n\nclass Scene extends Sprite\n{\n	public var myGame:Game;\n	public var world:B2World;\n	public var worldScale:Int = 30; // pixel to metr;\n\n	private var worldGravity:B2Vec2;\n	private var worldStep:Float = 1/30;\n	private var velocityIterations:Int = 10;\n	private var positionIterations:Int = 10;\n	private var sceneContactListener:ContactListener;\n	private var _timeMaster:TimeMaster;\n	private var _allPlayersOnScene:Array<Dynamic> = new Array();\n	private var _playersToRemove:Array<Dynamic> = new Array();\n	private var myGameTurnControl:GameTurnControl;\n	private var _userInterface:UserInterface;\n	private var _curPlayer:ScenePlayerActor;\n\n	public var maxSceneWidth:Int = 2048;\n	public var maxSceneHeight:Int = 1280;\n\n	private var _allActors:Array<Dynamic> = new Array();\n\n	public function new(game)\n	{\n		super();\n		myGame = game;\n		initilize();\n	}\n\n	private function initilize()\n	{\n		createTimeMaster();\n		createWorld();\n		createContactListener();\n		createUserInterface();\n\n		addDebuger();\n\n		createLevel();\n		createActors();\n		createGameTurnControl();\n		doPlayerTurnQue();\n	}\n\n	private function createGameTurnControl()\n	{\n		myGameTurnControl = new GameTurnControl(this, 10);\n	}\n\n	private function createUserInterface()\n	{\n		_userInterface = new UserInterface(this);\n		addChild(_userInterface);\n	}\n\n	private function createTimeMaster()\n	{\n		_timeMaster = new TimeMaster(this, worldStep);\n	}\n\n	private function createWorld()\n	{\n		worldGravity = new B2Vec2(0, 9.8); //x=0, y=G == 9.8;\n		var isSleep:Bool = true;\n		world = new B2World(worldGravity, isSleep);\n	}\n\n	private function createContactListener()\n	{\n		sceneContactListener = new ContactListener(this);\n		world.setContactListener(sceneContactListener);\n	}\n\n	private function update(event:Event)\n	{\n		var step = _timeMaster.getTimeStep();\n		world.step(step, velocityIterations, positionIterations);\n		world.clearForces();\n		world.drawDebugData();\n\n		for(i in 0..._allActors.length)\n		{\n			_allActors[i].update();\n		}\n\n		cameraControl();\n\n		myGameTurnControl.update();\n		_userInterface.update();\n\n		removePlayersFromScene();\n		\n	}\n\n	private function addDebuger()\n	{\n		var debugDraw = new B2DebugDraw();\n		var debugSprite = new Sprite();\n		addChild(debugSprite);\n		\n		debugDraw.setSprite(debugSprite);\n		debugDraw.setDrawScale(worldScale);\n		debugDraw.setFlags(B2DebugDraw.e_shapeBit);\n		\n		world.setDebugDraw(debugDraw);\n	}\n\n	private function createActors()\n	{\n		\n		var playerPos = new B2Vec2(100, 650);\n		createPlayerActor(playerPos, 3, 1);\n\n		var enemyPos = new B2Vec2(300, 650);\n		createBotActor(enemyPos, 3, 1);\n	}\n\n	private function createGround(width:Int, height:Int, pos:B2Vec2, figures:Int)\n	{\n		var width = width/2;\n		var height = height/2;\n		var loc = new B2Vec2(pos.x/2/worldScale, pos.y/worldScale);\n\n		var newGroundActor = new SceneGroundActor(this, width, height, loc, figures, true);\n\n		_allActors.push(newGroundActor);\n	}\n\n	private function createPlayerActor(pos:B2Vec2, velocityX:Int, velocityY:Int)\n	{\n		var loc = new B2Vec2(pos.x/worldScale, pos.y/worldScale);\n		var eType = \"Player\";\n		var name = \"I'm a player\";\n		var player = new ScenePlayerActor(this, loc, velocityX, velocityY, eType, name);\n		_allActors.push(player);\n	}\n\n	private function createBotActor(pos:B2Vec2, velocityX:Int, velocityY:Int)\n	{\n		var loc = new B2Vec2(pos.x/worldScale, pos.y/worldScale);\n		var eType = \"Bot\";\n		var newEnemy = new ScenePlayerActor(this, loc, velocityX, velocityY, eType);\n		_allActors.push(newEnemy);\n	}\n\n	private function sceneFollowPlayer()\n	{\n 		root.scaleX = 2;\n 		root.scaleY = 2;\n 		this.x = -_curPlayer.getSprite().x + stage.stageWidth/4;\n 		this.y = -_curPlayer.getSprite().y + stage.stageHeight/4;\n	}\n\n	private function createLevel()\n	{	\n		var groundPos = new B2Vec2(1920, 700);\n		createGround(1920, 20, groundPos, 10);\n\n	//	createWalls();\n	}\n\n	private function cameraControl()\n	{\n		if (_curPlayer != null)\n		{\n			sceneFollowPlayer();\n		}\n	}\n\n	private function doPlayerTurnQue()\n	{\n		for (i in 0..._allActors.length)\n		{\n			var player = _allActors[i];\n			if (player.getEntityType() == \"Player\" || player.getEntityType() == \"Bot\")\n				_allPlayersOnScene.push(player);\n		}\n\n		_allPlayersOnScene.sort(function(x,y){ return Math.round(Math.random()); });\n		_curPlayer = _allPlayersOnScene[0];\n		//round start\n\n	}\n\n	private function teamPlayerTurnQue()\n	{\n		//TODO: turn players in team mode, 1 member per team, then next member per team, for the last member - round end;\n	}\n\n	public function takeTurnToNextPlayer()\n	{\n		var lastPlayerTurn = _curPlayer;\n		_curPlayer = null;\n		\n		var index = _allPlayersOnScene.indexOf(lastPlayerTurn);\n		if ( index > -1 )\n		{\n			if ( index+1 < _allPlayersOnScene.length)\n				_curPlayer = _allPlayersOnScene[index+1];\n			else \n				_curPlayer = _allPlayersOnScene[0];\n				//round ended\n		}\n\n		turnStart();\n		\n	}\n\n	public function endTurn()\n	{\n		//TODO: clear all turn moving, stop all collisions,\n\n		if (_curPlayer.getEntityType() == \"Player\")\n		{\n			_curPlayer.removeInputListener();\n			_curPlayer.forciblyKeyUp();	\n		}\n		\n		_curPlayer.removeWeapon();\n		takeTurnToNextPlayer();\n	}\n\n	public function turnStart()\n	{\n		if (_curPlayer.getEntityType() == \"Player\")\n			_curPlayer.addInputListener();\n			\n		_curPlayer.equipLastWeapon();\n		startTimer();\n	}\n\n	private function startTimer()\n	{\n		myGameTurnControl.startTimer();\n	}\n\n	public function markToRemovePlayer(playerActor:ScenePlayerActor)\n	{\n		if( _playersToRemove.indexOf(playerActor) < 0 )\n			_playersToRemove.push(playerActor);\n	}\n\n	public function removePlayersFromScene()\n	{\n		for (i in 0..._playersToRemove.length){\n			_playersToRemove[i].destroy();\n			var index =_playersToRemove.indexOf(_playersToRemove[i]);\n			if (index > -1){\n				_playersToRemove.splice(index, 1);\n			}\n		}\n		_playersToRemove = new Array();\n	}\n\n	public function getUI()\n	{\n		return _userInterface;\n	}\n\n	public function start()\n	{\n		addEventListener(Event.ENTER_FRAME, update);\n		turnStart();\n	}\n\n	public function stop():Void\n	{\n		removeEventListener(Event.ENTER_FRAME, update);\n	}\n\n}",
			"file": "source/Scene.hx",
			"file_size": 6592,
			"file_write_time": 131100301804504006,
			"settings":
			{
				"buffer_size": 6309,
				"line_ending": "Windows"
			}
		},
		{
			"file": "source/UserInterface.hx",
			"settings":
			{
				"buffer_size": 335,
				"line_ending": "Windows"
			}
		},
		{
			"file": "source/Weapon.hx",
			"settings":
			{
				"buffer_size": 1835,
				"line_ending": "Windows"
			}
		},
		{
			"file": "source/GameTurnControl.hx",
			"settings":
			{
				"buffer_size": 2561,
				"line_ending": "Windows"
			}
		},
		{
			"file": "source/ScenePlayerActor.hx",
			"settings":
			{
				"buffer_size": 9690,
				"line_ending": "Windows"
			}
		},
		{
			"file": "source/TimeMaster.hx",
			"settings":
			{
				"buffer_size": 451,
				"line_ending": "Windows"
			}
		},
		{
			"file": "source/SceneActor.hx",
			"settings":
			{
				"buffer_size": 1323,
				"line_ending": "Windows"
			}
		},
		{
			"file": "source/SceneGroundActor.hx",
			"settings":
			{
				"buffer_size": 6357,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Admin/Documents/GitHub/roaches-box2d-haxe",
		"/C/Users/Admin/Documents/GitHub/roaches-box2d-haxe/source",
		"/c/haxetoolkit/haxe/lib/box2d/1,2,3",
		"/c/haxetoolkit/haxe/lib/box2d/1,2,3/samples",
		"/c/haxetoolkit/haxe/lib/box2d/1,2,3/samples/TestBed",
		"/c/haxetoolkit/haxe/lib/box2d/1,2,3/samples/TestBed/Source"
	],
	"file_history":
	[
		"/C/Users/Admin/AppData/Local/Temp/7zO8E55456E/HelloWorld.as",
		"/C/Users/Admin/Documents/GitHub/roaches-box2d-haxe/source/Input.hx",
		"/C/Users/Admin/Documents/GitHub/roaches-box2d-haxe/source/BotEvent.hx",
		"/C/Users/Admin/Documents/GitHub/roaches-box2d-haxe/source/SceneBotActor.hx",
		"/C/Users/Admin/Documents/GitHub/roaches-box2d-haxe/source/Main.hx",
		"/C/Users/Admin/Documents/GitHub/roaches-box2d-haxe/source/Game.hx",
		"/C/Users/Admin/Desktop/teaching/TooManyShoots/source/Camera.hx",
		"/C/Users/Admin/Documents/GitHub/roaches-box2d-haxe/source/GameTimer.hx",
		"/C/Users/Admin/Desktop/teaching/TooManyShoots/source/Main.hx",
		"/C/Users/Admin/Desktop/teaching/TooManyShoots/source/PegActor.hx",
		"/C/Users/Admin/Desktop/teaching/TooManyShoots/source/PegEvent.hx",
		"/C/Users/Admin/Documents/GitHub/roaches-box2d-haxe/source/EnemyEvent.hx",
		"/C/Users/Admin/Documents/GitHub/roaches-box2d-haxe/source/PlayerEvent.hx",
		"/C/Users/Admin/Documents/GitHub/roaches-box2d-haxe/source/ScenePlayerActor.hx",
		"/C/Users/Admin/Desktop/teaching/TooManyShoots/source/Actor.hx",
		"/C/Users/Admin/Desktop/teaching/TooManyShoots/source/PlayerActor.hx",
		"/C/Users/Admin/Desktop/teaching/TooManyShoots/source/BallEvent.hx",
		"/C/Users/Admin/Desktop/teaching/TooManyShoots/source/BonusChuteActor.hx",
		"/C/Users/Admin/Documents/GitHub/roaches-box2d-haxe/source/Camera.hx",
		"/C/Users/Admin/Desktop/teaching/TooManyShoots/source/ArbiStaticActor.hx",
		"/C/Users/Admin/Documents/GitHub/roaches-box2d-haxe/Project.xml",
		"/C/Users/Admin/Documents/GitHub/roaches-box2d-haxe/source/ContactListener.hx",
		"/C/Users/Admin/Desktop/teaching/TooManyShoots/source/Director.hx",
		"/C/Users/Admin/Desktop/teaching/TooManyShoots/source/Global.hx",
		"/C/Users/Admin/Desktop/teaching/TooManyShoots/source/TimeMaster.hx",
		"/C/Users/Admin/Desktop/teaching/TooManyShoots/source/ContactListener.hx",
		"/C/Users/Admin/Desktop/teaching/TooManyShoots/Project.xml",
		"/C/HaxeToolkit/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Main.hx",
		"/C/Users/Admin/Documents/GitHub/roaches-box2d-haxe/.gitignore",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/Global.hx",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/Actor.hx",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/BonusChuteActor.hx",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/ArbiStaticActor.hx",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/PegActor.hx",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/PlayerActor.hx",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/Project.xml",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/ContactListener.hx",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/Main.hx",
		"/C/Users/Admin/Desktop/teaching/TooManyShoots/.gitignore",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/BallEvent.hx",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/PegEvent.hx",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/PlayerEvent.hx",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/GameInfo.hx",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/GameMenu.hx",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/GameScreen.hx",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/Player.hx",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/Main_worked_teaching.hx",
		"/c/Users/Admin/Desktop/teaching/TooManyShoots/source/Main_old.hx",
		"/C/Users/Admin/Desktop/SimpleBox2DExample.as",
		"/c/haxetoolkit/haxe/lib/box2d/1,2,3/samples/TestBed/Source/Test.hx",
		"/C/Users/Admin/Desktop/teaching/TooManyShoots/source/Main.as",
		"/C/Users/Admin/Desktop/teaching/HelloWorld/Project.xml",
		"/C/Users/Admin/Desktop/teaching/HelloWorld/source/Main.hx",
		"/C/HaxeToolkit/haxe/lib/box2d/1,2,3/samples/TestBed/project.xml",
		"/C/Users/Admin/Desktop/teaching/asteroids/net/richardlord/asteroids/graphics/BulletView.hx",
		"/C/Users/Admin/Desktop/teaching/asteroids/net/richardlord/asteroids/nodes/AnimationNode.hx",
		"/C/Users/Admin/Desktop/teaching/asteroids/net/richardlord/asteroids/components/Animation.hx",
		"/C/Users/Admin/Desktop/teaching/asteroids/net/richardlord/asteroids/components/Spaceship.hx",
		"/C/Users/Admin/Desktop/teaching/asteroids/net/richardlord/asteroids/GameConfig.hx",
		"/C/Users/Admin/Desktop/teaching/asteroids/net/richardlord/asteroids/systems/RenderSystem.hx",
		"/C/Users/Admin/Desktop/teaching/asteroids/net/richardlord/asteroids/systems/MovementSystem.hx",
		"/C/Users/Admin/Desktop/teaching/asteroids/net/richardlord/asteroids/systems/MotionControlSystem.hx",
		"/C/Users/Admin/Desktop/teaching/asteroids/net/richardlord/asteroids/systems/GunControlSystem.hx",
		"/c/Users/Admin/Desktop/teaching/HelloWorld/source/Player.hx",
		"/c/Users/Admin/Desktop/teaching/HelloWorld/source/Enemy.hx",
		"/c/Users/Admin/Desktop/teaching/HelloWorld/source/CombatHUD.hx",
		"/c/Users/Admin/Desktop/teaching/HelloWorld/source/HUD.hx",
		"/c/Users/Admin/Desktop/teaching/HelloWorld/source/Coin.hx",
		"/c/Users/Admin/Desktop/teaching/HelloWorld/source/PlayState.hx",
		"/C/Users/Admin/Desktop/teaching/asteroids/net/richardlord/asteroids/Main.hx",
		"/c/Users/Admin/Desktop/teaching/HelloWorld/source/fixel/FlxSprite.hx",
		"/c/Users/Admin/Desktop/teaching/HelloWorld/source/MenuState.hx",
		"/c/Users/Admin/Desktop/teaching/HelloWorld/source/Main.hx",
		"/c/Users/Admin/Desktop/teaching/HelloWorld/Project.xml",
		"/c/Users/Admin/Desktop/teaching/HelloWorld/source/flixel/FlxSprite.hx",
		"/C/Users/Admin/Desktop/teaching/HelloWorld/source/MenuState.hx",
		"/C/HaxeToolkit/haxe/lib/flixel-demos/2,1,0/Tutorials/TurnBasedRPG/source/HUD.hx",
		"/C/Users/Admin/Documents/GitHub/shoot-them-all/main.js",
		"/C/Users/Admin/Documents/GitHub/shoot-them-all/index.html",
		"/C/Users/Admin/Documents/GitHub/shoot-them-all/index.css",
		"/C/Users/Admin/Desktop/teaching/teaching_2.html",
		"/C/Users/Admin/AppData/Roaming/Sublime Text 3/Packages/Haxe/Support/Haxe.sublime-settings",
		"/C/Users/Admin/Desktop/teaching/teaching_haxe/main.js",
		"/C/Users/Admin/Desktop/arpg/index.js",
		"/C/Users/Admin/Desktop/arpg/common/tool.js",
		"/C/Users/Admin/Documents/GitHub/hory-card-v2.0/if.css",
		"/C/Users/Admin/Documents/GitHub/hory-card-v2.0/index.html"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			");\n",
			"reset",
			"actorToRemove",
			"));\n",
			"m_type",
			"getType",
			";\n",
			");\n",
			"setV",
			"Global.world_sprite",
			"m_physScale",
			"new",
			"m_bodyList",
			"the_w",
			"size",
			"set_size",
			"setSize",
			"12",
			"getParent",
			"removeComponent",
			"getCompon",
			"updateUIfightingLog",
			"updateUIplayerStats",
			"getData",
			"this.getData",
			"this.weapon",
			"getComponentList",
			" this.components",
			" this.parent.components.",
			"classDefenition",
			"this.bagVault.1.",
			"this.bagVault[1]"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"world_scale",
			"w",
			"W",
			"classDefinition",
			"gun.",
			"gun"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "source/Scene.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6309,
						"regions":
						{
						},
						"selection":
						[
							[
								5380,
								5380
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3888.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "source/UserInterface.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 335,
						"regions":
						{
						},
						"selection":
						[
							[
								328,
								328
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "source/Weapon.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1835,
						"regions":
						{
						},
						"selection":
						[
							[
								1810,
								1810
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1242.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "source/GameTurnControl.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2561,
						"regions":
						{
						},
						"selection":
						[
							[
								2179,
								2179
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1756.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "source/ScenePlayerActor.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9690,
						"regions":
						{
						},
						"selection":
						[
							[
								8756,
								8756
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5059.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "source/TimeMaster.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 451,
						"regions":
						{
						},
						"selection":
						[
							[
								174,
								174
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "source/SceneActor.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1323,
						"regions":
						{
						},
						"selection":
						[
							[
								978,
								978
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 756.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "source/SceneGroundActor.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6357,
						"regions":
						{
						},
						"selection":
						[
							[
								4341,
								4341
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1530.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "roaches.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 248.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
